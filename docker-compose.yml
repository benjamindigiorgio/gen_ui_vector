version: "3.8"

services:
  ask_db:
    hostname: db
    image: ankane/pgvector
    container_name: vector-db-pg
    ports:
      - 5432:5432
    restart: always
    environment:
      POSTGRES_DATABASE: "postgres"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "password"
      POSTGRES_ROOT_PASSWORD: "password"
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - db_data:/var/lib/postgresql/data
    # networks:
    #   - app-network

  # nginx:
  #   image: nginx:1.15-alpine
  #   container_name: ask-app-nginx
  #   ports:
  #     - 80:80
  #     - 443:443
  #   volumes:
  #     - ./app/:/var/www/html/
  #     - ./nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
  #     - ./nginx/log:/var/log/nginx/

  #   depends_on:
  #     - web
  #     - ask_db
  #   networks:
  #     - app-network

  # web:
  #   container_name: web
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   volumes:
  #     - ./frontend/src:/app/src
  #     - ./frontend/public:/app/public
  #     - ./frontend/schemas:/app/schemas
  #     - ./frontend/migrations:/app/migrations
  #     - ./frontend/.env.docker:/app/.env.local
  #     - "/app/node_modules"
  #   restart: always
  #   ports:
  #     - 3000:3000
  #   depends_on:
  #     - ask_db
  #   networks:
  #     - app-network

volumes:
  db_data:
# networks:
#   app-network:
#     driver: bridge
